{"ast":null,"code":"export let Gender;\n\n(function (Gender) {\n  Gender[\"Male\"] = \"male\";\n  Gender[\"Female\"] = \"female\";\n  Gender[\"Other\"] = \"other\";\n})(Gender || (Gender = {}));\n\nexport let EntryType;\n\n(function (EntryType) {\n  EntryType[\"HealthCheck\"] = \"HealthCheck\";\n  EntryType[\"Hospital\"] = \"Hospital\";\n  EntryType[\"OccupationalHealthcare\"] = \"OccupationalHealthcare\";\n})(EntryType || (EntryType = {}));\n\nexport let HealthCheckRating;\n\n(function (HealthCheckRating) {\n  HealthCheckRating[HealthCheckRating[\"Healthy\"] = 0] = \"Healthy\";\n  HealthCheckRating[HealthCheckRating[\"LowRisk\"] = 1] = \"LowRisk\";\n  HealthCheckRating[HealthCheckRating[\"HighRisk\"] = 2] = \"HighRisk\";\n  HealthCheckRating[HealthCheckRating[\"CriticalRisk\"] = 3] = \"CriticalRisk\";\n})(HealthCheckRating || (HealthCheckRating = {}));","map":{"version":3,"sources":["/home/danleks/Documents/programming/fullstackopen/part9/patientor/frontend/src/types.ts"],"names":["Gender","EntryType","HealthCheckRating"],"mappings":"AAMA,WAAYA,MAAZ;;WAAYA,M;AAAAA,EAAAA,M;AAAAA,EAAAA,M;AAAAA,EAAAA,M;GAAAA,M,KAAAA,M;;AAMZ,WAAYC,SAAZ;;WAAYA,S;AAAAA,EAAAA,S;AAAAA,EAAAA,S;AAAAA,EAAAA,S;GAAAA,S,KAAAA,S;;AAMZ,WAAYC,iBAAZ;;WAAYA,iB;AAAAA,EAAAA,iB,CAAAA,iB;AAAAA,EAAAA,iB,CAAAA,iB;AAAAA,EAAAA,iB,CAAAA,iB;AAAAA,EAAAA,iB,CAAAA,iB;GAAAA,iB,KAAAA,iB","sourcesContent":["export interface Diagnosis {\n  code: string;\n  name: string;\n  latin?: string;\n}\n\nexport enum Gender {\n  Male = \"male\",\n  Female = \"female\",\n  Other = \"other\"\n}\n\nexport enum EntryType {\n  HealthCheck = 'HealthCheck',\n  Hospital = 'Hospital',\n  OccupationalHealthcare = 'OccupationalHealthcare',\n}\n\nexport enum HealthCheckRating {\n  'Healthy' = 0,\n  'LowRisk' = 1,\n  'HighRisk' = 2,\n  'CriticalRisk' = 3,\n}\n\ninterface Discharge {\n  date: string,\n  criteria: string,\n}\n\nexport interface Diagnoses {\n  code: string;\n  name: string;\n  latin?: string;\n}\n\nexport interface BaseEntry {\n  id: string,\n  date: string,\n  type: EntryType,\n  specialist: string,\n  diagnosisCodes?: Array<Diagnoses['code']>,\n  description?: string,\n}\n\nexport interface HealthCheckEntry extends BaseEntry {\n  healthCheckRating: HealthCheckRating,\n}\n\nexport interface HospitalEntry extends BaseEntry {\n  discharge: Discharge,\n}\n\nexport interface OccupationalHealthcareEntry extends BaseEntry {\n  sickleave?: string,\n}\n\nexport type Entries =\n    | HospitalEntry\n    | HealthCheckEntry\n    | OccupationalHealthcareEntry;\n\nexport interface Patient {\n  id: string;\n  name: string;\n  occupation: string;\n  gender: Gender;\n  ssn?: string;\n  dateOfBirth?: string;\n  entries: Entries[];\n}"]},"metadata":{},"sourceType":"module"}
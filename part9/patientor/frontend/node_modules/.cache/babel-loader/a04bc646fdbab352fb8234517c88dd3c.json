{"ast":null,"code":"var _jsxFileName = \"/home/danleks/Documents/programming/fullstackopen/part9/patientor/frontend/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport axios from \"axios\";\nimport { Route, Link, Routes } from \"react-router-dom\";\nimport { Button, Divider, Container } from \"@material-ui/core\";\nimport { apiBaseUrl } from \"./constants\";\nimport { setDiagnoses, setPatientList, useStateValue } from \"./state\";\nimport PatientListPage from \"./PatientListPage\";\nimport { Typography } from \"@material-ui/core\";\nimport IndividualPatientlInfo from \"./components/IndividualPatientInfo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [, dispatch] = useStateValue();\n  React.useEffect(() => {\n    void axios.get(`${apiBaseUrl}/ping`);\n\n    const fetchPatientList = async () => {\n      try {\n        const {\n          data: patientListFromApi\n        } = await axios.get(`${apiBaseUrl}/patients`);\n        dispatch(setPatientList(patientListFromApi));\n      } catch (e) {\n        console.error(e);\n      }\n    };\n\n    const fetchDiagnoses = async () => {\n      try {\n        const {\n          data: diagnosesFromApi\n        } = await axios.get(`${apiBaseUrl}/diagnoses`);\n        console.log(diagnosesFromApi);\n        dispatch(setDiagnoses(diagnosesFromApi));\n      } catch (e) {\n        console.error(e);\n      }\n    };\n\n    void fetchPatientList();\n    void fetchDiagnoses();\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        style: {\n          marginBottom: \"0.5em\"\n        },\n        children: \"Patientor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        component: Link,\n        to: \"/\",\n        variant: \"contained\",\n        color: \"primary\",\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        hidden: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(PatientListPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 38\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"patients/:id\",\n          element: /*#__PURE__*/_jsxDEV(IndividualPatientlInfo, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 49\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"+r3TOJjl6FW+CDEH/8gvAmdHtF8=\", false, function () {\n  return [useStateValue];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/danleks/Documents/programming/fullstackopen/part9/patientor/frontend/src/App.tsx"],"names":["React","axios","Route","Link","Routes","Button","Divider","Container","apiBaseUrl","setDiagnoses","setPatientList","useStateValue","PatientListPage","Typography","IndividualPatientlInfo","App","dispatch","useEffect","get","fetchPatientList","data","patientListFromApi","e","console","error","fetchDiagnoses","diagnosesFromApi","log","marginBottom"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,MAAtB,QAAoC,kBAApC;AACA,SAASC,MAAT,EAAiBC,OAAjB,EAA0BC,SAA1B,QAA2C,mBAA3C;AAEA,SAASC,UAAT,QAA2B,aAA3B;AACA,SAAQC,YAAR,EAAsBC,cAAtB,EAAsCC,aAAtC,QAA0D,SAA1D;AAGA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAOC,sBAAP,MAAmC,oCAAnC;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,GAAGC,QAAH,IAAeL,aAAa,EAAlC;AACAX,EAAAA,KAAK,CAACiB,SAAN,CAAgB,MAAM;AACpB,SAAKhB,KAAK,CAACiB,GAAN,CAAiB,GAAEV,UAAW,OAA9B,CAAL;;AAEA,UAAMW,gBAAgB,GAAG,YAAY;AACnC,UAAI;AACF,cAAM;AAAEC,UAAAA,IAAI,EAAEC;AAAR,YAA+B,MAAMpB,KAAK,CAACiB,GAAN,CACxC,GAAEV,UAAW,WAD2B,CAA3C;AAGAQ,QAAAA,QAAQ,CAACN,cAAc,CAACW,kBAAD,CAAf,CAAR;AACD,OALD,CAKE,OAAOC,CAAP,EAAU;AACVC,QAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACD;AACF,KATD;;AAWA,UAAMG,cAAc,GAAG,YAAY;AACjC,UAAI;AACF,cAAM;AAAEL,UAAAA,IAAI,EAAEM;AAAR,YAA6B,MAAMzB,KAAK,CAACiB,GAAN,CAAW,GAAEV,UAAW,YAAxB,CAAzC;AACAe,QAAAA,OAAO,CAACI,GAAR,CAAYD,gBAAZ;AACAV,QAAAA,QAAQ,CAACP,YAAY,CAACiB,gBAAD,CAAb,CAAR;AACD,OAJD,CAIE,OAAOJ,CAAP,EAAU;AACVC,QAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACD;AACF,KARD;;AAUA,SAAKH,gBAAgB,EAArB;AACA,SAAKM,cAAc,EAAnB;AACD,GA1BD,EA0BG,CAACT,QAAD,CA1BH;AA6BA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACI,QAAC,SAAD;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAyB,QAAA,KAAK,EAAE;AAAEY,UAAAA,YAAY,EAAE;AAAhB,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAEzB,IAAnB;AAAyB,QAAA,EAAE,EAAC,GAA5B;AAAgC,QAAA,OAAO,EAAC,WAAxC;AAAoD,QAAA,KAAK,EAAC,SAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAOE,QAAC,OAAD;AAAS,QAAA,MAAM;AAAf;AAAA;AAAA;AAAA;AAAA,cAPF,eAQE,QAAC,MAAD;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,GAAZ;AAAgB,UAAA,OAAO,eAAE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAzB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,cAAZ;AAA2B,UAAA,OAAO,eAAE,QAAC,sBAAD;AAAA;AAAA;AAAA;AAAA;AAApC;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAhDD;;GAAMY,G;UACiBJ,a;;;KADjBI,G;AAkDN,eAAeA,GAAf","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport { Route, Link, Routes } from \"react-router-dom\";\nimport { Button, Divider, Container } from \"@material-ui/core\";\n\nimport { apiBaseUrl } from \"./constants\";\nimport {setDiagnoses, setPatientList, useStateValue} from \"./state\";\nimport { Patient } from \"./types\";\n\nimport PatientListPage from \"./PatientListPage\";\nimport { Typography } from \"@material-ui/core\";\nimport IndividualPatientlInfo from \"./components/IndividualPatientInfo\";\n\nconst App = () => {\n  const [, dispatch] = useStateValue();\n  React.useEffect(() => {\n    void axios.get<void>(`${apiBaseUrl}/ping`);\n\n    const fetchPatientList = async () => {\n      try {\n        const { data: patientListFromApi } = await axios.get<Patient[]>(\n          `${apiBaseUrl}/patients`\n        );\n        dispatch(setPatientList(patientListFromApi));\n      } catch (e) {\n        console.error(e);\n      }\n    };\n\n    const fetchDiagnoses = async () => {\n      try {\n        const { data: diagnosesFromApi } = await axios.get(`${apiBaseUrl}/diagnoses`)\n        console.log(diagnosesFromApi)\n        dispatch(setDiagnoses(diagnosesFromApi));\n      } catch (e) {\n        console.error(e)\n      }\n    }\n\n    void fetchPatientList();\n    void fetchDiagnoses();\n  }, [dispatch]);\n\n\n  return (\n    <div className=\"App\">\n        <Container>\n          <Typography variant=\"h3\" style={{ marginBottom: \"0.5em\" }}>\n            Patientor\n          </Typography>\n          <Button component={Link} to=\"/\" variant=\"contained\" color=\"primary\">\n            Home\n          </Button>\n          <Divider hidden />\n          <Routes>\n            <Route path=\"/\" element={<PatientListPage />} />\n            <Route path=\"patients/:id\" element={<IndividualPatientlInfo />} />\n          </Routes>\n        </Container>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
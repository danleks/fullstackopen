{"ast":null,"code":"var _jsxFileName = \"/home/danleks/Documents/programming/fullstackopen/part9/patientor/frontend/src/components/IndividualPatientInfo.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { apiBaseUrl } from \"../constants\";\nimport { useStateValue } from \"../state\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst IndividualPatientInfo = () => {\n  _s();\n\n  const [{\n    patient\n  }, dispatch] = useStateValue();\n  const [error, setError] = React.useState();\n  const {\n    id\n  } = useParams();\n  console.log(id);\n  React.useEffect(() => {\n    const fetchIndividualPatient = async () => {\n      try {\n        const {\n          data: IndividualPatientFromApi\n        } = await axios.get(`${apiBaseUrl}/patients/${id}`);\n        dispatch({\n          type: 'SET_INDIVIDUAL_PATIENT',\n          payload: IndividualPatientFromApi\n        });\n      } catch (e) {\n        if (axios.isAxiosError(e)) {\n          var _e$response, _e$response2, _e$response2$data;\n\n          console.error((e === null || e === void 0 ? void 0 : (_e$response = e.response) === null || _e$response === void 0 ? void 0 : _e$response.data) || 'Unrecognized axios error');\n          setError(String(e === null || e === void 0 ? void 0 : (_e$response2 = e.response) === null || _e$response2 === void 0 ? void 0 : (_e$response2$data = _e$response2.data) === null || _e$response2$data === void 0 ? void 0 : _e$response2$data.error) || 'Unrecognized axios error');\n        } else {\n          console.error('unknown error', e);\n          setError('unknown error');\n        }\n      }\n    };\n\n    void fetchIndividualPatient();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: id && patient[id].name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n\n_s(IndividualPatientInfo, \"9JTGB4kkdf7BijVhJX6nKQ5hmVo=\", false, function () {\n  return [useStateValue, useParams];\n});\n\n_c = IndividualPatientInfo;\nexport default IndividualPatientInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"IndividualPatientInfo\");","map":{"version":3,"sources":["/home/danleks/Documents/programming/fullstackopen/part9/patientor/frontend/src/components/IndividualPatientInfo.tsx"],"names":["React","useParams","axios","apiBaseUrl","useStateValue","IndividualPatientInfo","patient","dispatch","error","setError","useState","id","console","log","useEffect","fetchIndividualPatient","data","IndividualPatientFromApi","get","type","payload","e","isAxiosError","response","String","name"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,UAAR,QAAyB,cAAzB;AACA,SAAQC,aAAR,QAA4B,UAA5B;;;AAEA,MAAMC,qBAAqB,GAAG,MAAM;AAAA;;AAChC,QAAM,CAAC;AAACC,IAAAA;AAAD,GAAD,EAAYC,QAAZ,IAAwBH,aAAa,EAA3C;AAEA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBT,KAAK,CAACU,QAAN,EAA1B;AACA,QAAM;AAAEC,IAAAA;AAAF,MAASV,SAAS,EAAxB;AAEAW,EAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ;AAEAX,EAAAA,KAAK,CAACc,SAAN,CAAgB,MAAM;AAClB,UAAMC,sBAAsB,GAAG,YAAY;AACvC,UAAI;AACA,cAAM;AAAEC,UAAAA,IAAI,EAAEC;AAAR,YAAqC,MAAMf,KAAK,CAACgB,GAAN,CAAoB,GAAEf,UAAW,aAAYQ,EAAG,EAAhD,CAAjD;AACAJ,QAAAA,QAAQ,CAAC;AAACY,UAAAA,IAAI,EAAE,wBAAP;AAAiCC,UAAAA,OAAO,EAAEH;AAA1C,SAAD,CAAR;AACH,OAHD,CAGE,OAAOI,CAAP,EAAmB;AACjB,YAAInB,KAAK,CAACoB,YAAN,CAAmBD,CAAnB,CAAJ,EAA2B;AAAA;;AACvBT,UAAAA,OAAO,CAACJ,KAAR,CAAc,CAAAa,CAAC,SAAD,IAAAA,CAAC,WAAD,2BAAAA,CAAC,CAAEE,QAAH,4DAAaP,IAAb,KAAqB,0BAAnC;AACAP,UAAAA,QAAQ,CAACe,MAAM,CAACH,CAAD,aAACA,CAAD,uCAACA,CAAC,CAAEE,QAAJ,sEAAC,aAAaP,IAAd,sDAAC,kBAAmBR,KAApB,CAAN,IAAoC,0BAArC,CAAR;AACH,SAHD,MAGO;AACHI,UAAAA,OAAO,CAACJ,KAAR,CAAc,eAAd,EAA+Ba,CAA/B;AACAZ,UAAAA,QAAQ,CAAC,eAAD,CAAR;AACH;AACJ;AACJ,KAbD;;AAcA,SAAKM,sBAAsB,EAA3B;AACH,GAhBD,EAgBG,EAhBH;AAkBA,sBACI;AAAA,2BACI;AAAA,gBAAKJ,EAAE,IAAIL,OAAO,CAACK,EAAD,CAAP,CAAYc;AAAvB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CA/BD;;GAAMpB,qB;UAC4BD,a,EAGfH,S;;;KAJbI,qB;AAiCN,eAAeA,qBAAf","sourcesContent":["import React from 'react';\nimport {useParams} from \"react-router-dom\";\nimport {Patient} from \"../types\";\nimport axios from \"axios\";\nimport {apiBaseUrl} from \"../constants\";\nimport {useStateValue} from \"../state\";\n\nconst IndividualPatientInfo = () => {\n    const [{patient}, dispatch] = useStateValue();\n\n    const [error, setError] = React.useState<string>();\n    const { id } = useParams<{ id: string}>();\n\n    console.log(id)\n\n    React.useEffect(() => {\n        const fetchIndividualPatient = async () => {\n            try {\n                const { data: IndividualPatientFromApi } = await axios.get<Patient>(`${apiBaseUrl}/patients/${id}`);\n                dispatch({type: 'SET_INDIVIDUAL_PATIENT', payload: IndividualPatientFromApi})\n            } catch (e: unknown) {\n                if (axios.isAxiosError(e)) {\n                    console.error(e?.response?.data || 'Unrecognized axios error');\n                    setError(String(e?.response?.data?.error) || 'Unrecognized axios error');\n                } else {\n                    console.error('unknown error', e);\n                    setError('unknown error');\n                }\n            }\n        }\n        void fetchIndividualPatient()\n    }, [])\n\n    return (\n        <div>\n            <h2>{id && patient[id].name}</h2>\n        </div>\n    );\n};\n\nexport default IndividualPatientInfo;"]},"metadata":{},"sourceType":"module"}